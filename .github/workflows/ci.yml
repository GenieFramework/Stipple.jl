name: ci
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    continue-on-error: ${{ matrix.os == 'nightly' || matrix.os == 'pre'  }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1'
          - 'pre'
          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest

      # Capture failure for optional jobs and continue
      - name: Handle optional failures
        if: ${{ failure() }}
        run: |
          if [[ "${{ matrix.os }}" == "nightly" || "${{ matrix.os }}" == "pre" ]]; then
            echo "::warning::Optional matrix job failed for ${{ matrix.os }}."
            echo "optional_fail=true" >> "${GITHUB_OUTPUT}"
            exit 0  # Ignore the error to keep the green checkmark going
          fi
          exit 1  # If it's not an optional job, fail the job
          
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1'
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
        run: julia --project=docs/ docs/make.jl
